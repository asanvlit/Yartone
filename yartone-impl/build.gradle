bootJar.archiveFileName = "boot_${project.name}.jar"

ext {
    mapstructVersion = '1.4.2.Final'
    postgresqlVersion = '42.4.0'
    junitVersion = '5.7.0'
    jwtVersion = '0.6.0'
    jwtAuthVersion= '3.15.0'
    freemarkerVersion = '2.7.1'
    javaxValidationVersion = '2.0.1.Final'
    hibernateValidationVersion = '6.2.0.Final'
    mongoDbVersion = '4.5.0'
    openApiVersion = '1.6.9'
    minioVersion = '8.4.3'
    okHttpVersion = '4.3.1'
    codecVersion = '1.15'
    icu4jVersion = '71.1'
    jsoupVersion = '1.15.2'
    rgxgenVersion = '1.4'
    springSecurityTestVersion = '5.7.3'
}

dependencies {
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springframework.boot:spring-boot-starter-freemarker:${freemarkerVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-test"
    implementation 'org.hibernate:hibernate-core'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.apache.commons:commons-lang3'
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
    implementation "io.minio:minio:${minioVersion}"
    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    implementation "io.jsonwebtoken:jjwt:${jwtVersion}"
    implementation "com.auth0:java-jwt:${jwtAuthVersion}"
    implementation "commons-codec:commons-codec:${codecVersion}"
    implementation "javax.validation:validation-api:${javaxValidationVersion}"
    implementation "org.hibernate:hibernate-validator:${hibernateValidationVersion}"
    implementation "com.ibm.icu:icu4j:${icu4jVersion}"
    implementation "org.jsoup:jsoup:${jsoupVersion}"
    implementation "com.github.curious-odd-man:rgxgen:${rgxgenVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation project(':yartone-api')
    implementation project(':yartone-db')

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.springframework.security:spring-security-test:${springSecurityTestVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    project(":yartone-db").sourceSets.main.resources
            ]
        }
    }
}

test {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

